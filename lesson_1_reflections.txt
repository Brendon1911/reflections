1. How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I was able to view the changes that had been made to the file.

2. How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    By being able to go back to previous versions that may have worked better.

3. What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manual Pros - Control
                - Can make committs at logical intervals.
    
    Manual Cons - Might forget to make a commit.
    
    
    Auto Pros   - Easy since it's automatic.
                
    Auto Cons   - Doesn't give you very much control and runs the risk of making 
                commits that don't make sense.

4. Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because, when coding, different files often work together. For example; a web page 
    may need an HTML, CSS and JavaScript file in order to run properly.

5. How can you use the commands git log and git diff to view the history of files?

    I can use these commands to easily view the differences between the different versions 
    of the same file.

6. How might using version control make you more confident to make changes that
could break something?

    I'd be confident knowing that I could always go back to a file state that wasn't broken.

7. Now that you have your workspace set up, what do you want to try using Git for?

    I want to use git for version control of my projects.
